from ml_pentest.attacks.blackbox.attack_result import AttackResult

class GammaResult(AttackResult):
    """
    GammaResult is a specialized subclass of the AttackResult class, designed to store and manage the results
    of a GAMMA attack on machine learning models used for malware classification.

    Attributes:
        _iterations (int): The number of iterations performed by the attack.
        _queries (int): The number of queries made to the target model during the attack.
        _stagnation (boolean): Indicates whether the attack stopped due to stagnation.

    Methods:
        __init__(): Initializes a GammaResult object with given parameters.
        get_iterations(): Returns the number of iterations performed by the attack.
        get_queries(): Returns the number of queries made to the target model during the attack.
        get_stagnation(): Returns a boolean value indicating whether the attack stopped due to stagnation.
    """
    def __init__(self, adv_sample, elapsed_time, iterations, queries, stagnation):
        """Initializes a GAMMA Attack Result object with the given parameters.

        Args:
            adv_sample (list): the adversarial sample generated by the attack, as list of bytes.
            elapsed_time (float): the elapsed time of the attack, in seconds.
            iterations (int): The iterations of the genetic algorithm.
            queries (int): The number of queries made to the target model during the attack.
            stagnation (boolean): True if the attack is stagnated and stopped, False otherwise.
        """
        super().__init__(adv_sample, elapsed_time)
        self._iterations = iterations
        self._queries = queries
        self._stagnation = stagnation # True if the attack stopped because of stagnation, False otherwise

    def get_iterations(self):
        """Returns the number of iterations performed by the attack.

        Returns:
            (int): The number of iterations performed by the attack.
        """

        return self._iterations
    
    def get_queries(self):
        """Returns the number of queries made to the target model during the attack.

        Returns:
            (int): The number of queries made to the target model during the attack.
        """
        return self._queries
    
    def get_stagnation(self):
        """
        Returns a boolean value indicating whether the attack stopped due to stagnation.

        Returns:
            (boolean): A boolean value indicating whether the attack stopped due to stagnation.
        """
        return self._stagnation